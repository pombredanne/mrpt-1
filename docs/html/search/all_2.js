var searchData=
[
  ['grow',['grow',['../class_mrpt.html#a7d789c72d12dd668fc5ffb157a9a52f4',1,'Mrpt::grow(int n_trees_, int depth_, float density_=-1.0, int seed=0)'],['../class_mrpt.html#a7360964458339aab0ddedde324a03e47',1,'Mrpt::grow(double target_recall, const Eigen::Ref&lt; const Eigen::MatrixXf &gt; &amp;Q, int k_, int trees_max=-1, int depth_max=-1, int depth_min_=-1, int votes_max_=-1, float density=-1.0, int seed=0)'],['../class_mrpt.html#a2bf7a8162fc7f6bd56d10097aeedffc8',1,'Mrpt::grow(double target_recall, const float *Q, int n_test, int k_, int trees_max=-1, int depth_max=-1, int depth_min_=-1, int votes_max_=-1, float density=-1.0, int seed=0, const std::vector&lt; int &gt; &amp;indices_test={})'],['../class_mrpt.html#a40eae6f75c79b4ff0f5400b14f8d81c2',1,'Mrpt::grow(const float *data, int n_test, int k_, int trees_max=-1, int depth_max=-1, int depth_min_=-1, int votes_max_=-1, float density_=-1.0, int seed=0, const std::vector&lt; int &gt; &amp;indices_test={})'],['../class_mrpt.html#a7a6325435fc140ac5394c2f0136ea211',1,'Mrpt::grow(const Eigen::Ref&lt; const Eigen::MatrixXf &gt; &amp;Q, int k_, int trees_max=-1, int depth_max=-1, int depth_min_=-1, int votes_max_=-1, float density_=-1.0, int seed=0)']]],
  ['grow_5fautotune',['grow_autotune',['../class_mrpt.html#a6911b63fb6fb87129f893831391f42dd',1,'Mrpt::grow_autotune(double target_recall, int k_, int trees_max=-1, int depth_max=-1, int depth_min_=-1, int votes_max_=-1, float density_=-1.0, int seed=0, int n_test=100)'],['../class_mrpt.html#a9ee717a90c0548f31577b033540dda44',1,'Mrpt::grow_autotune(int k_, int trees_max=-1, int depth_max=-1, int depth_min_=-1, int votes_max_=-1, float density_=-1.0, int seed=0, int n_test=100)']]]
];
